# AI Rebaser Configuration - DRY RUN MODE
# This configuration demonstrates how conflicts would be resolved
# without actually making changes or opening PRs

# How often to run the rebase process (disabled in dry-run)
interval: 8h

# IMPORTANT: Dry run mode - don't make actual changes
dry_run: true

# Git configuration
git:
  # Path to your internal repository (update this path)
  internal_repo: "https://github.com/your-org/your-internal-repo.git"
  # Upstream repository to rebase against (e.g., coreboot)
  upstream_repo: "https://github.com/coreboot/coreboot.git"
  # Working directory for git operations
  working_dir: "/tmp/ai-rebaser-work"
  # Branch to rebase (your main development branch)
  branch: "main"

# OpenAI configuration
ai:
  # OpenAI API key - PREFER using OPENAI_API_KEY environment variable
  openai_api_key: ""  # Leave empty to use environment variable
  # Model to use for conflict resolution (gpt-4 recommended for complex conflicts)
  model: "gpt-4"
  # Maximum tokens for AI responses
  max_tokens: 2000

# GitHub configuration (not used in dry-run mode)
github:
  # GitHub personal access token - not used in dry-run
  token: ""
  # Repository owner - not used in dry-run
  owner: "your-org"
  # Repository name - not used in dry-run
  repo: "your-internal-repo"
  # Auto-merge settings - not used in dry-run
  auto_merge_delay: 24h
  # Team to request reviews from - not used in dry-run
  reviewers_team: "core-team"

# Slack notification configuration (disabled in dry-run mode)
slack:
  # Slack webhook URL - not used in dry-run
  webhook_url: ""
  # Channel to send notifications to - not used in dry-run
  channel: "#ai-rebaser"
  # Username for the bot - not used in dry-run
  username: "AI Rebaser"

# Test configuration (disabled in dry-run mode)
tests:
  # Maximum time to wait for all tests to complete - not used in dry-run
  timeout: 30m
  # List of test commands to run - not used in dry-run
  commands:
    - name: "build"
      command: "go"
      args: ["build", "./..."]
      working_dir: ""
      environment:
        CGO_ENABLED: "0"
    
    - name: "test"
      command: "go"
      args: ["test", "./..."]
      working_dir: ""
      environment:
        CGO_ENABLED: "0"
    
    - name: "lint"
      command: "golangci-lint"
      args: ["run"]
      working_dir: ""
      environment: {}