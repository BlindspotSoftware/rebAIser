# AI Rebaser Configuration
# This file configures the AI-assisted rebasing tool

# How often to run the rebase process (8h = 3 times per day)
interval: 8h

# Dry run mode - don't make actual changes
dry_run: false

# Git configuration
git:
  # Path to your internal repository
  internal_repo: "https://github.com/your-org/internal-repo.git"
  # Upstream repository to rebase against
  upstream_repo: "https://github.com/upstream/open-source-repo.git"
  # Working directory for git operations
  working_dir: "/tmp/ai-rebaser-work"
  # Branch to rebase onto
  branch: "main"

# OpenAI configuration
ai:
  # OpenAI API key (can also be set via OPENAI_API_KEY environment variable)
  openai_api_key: "sk-your-api-key-here"
  # Model to use for conflict resolution
  model: "gpt-4"
  # Maximum tokens for AI responses
  max_tokens: 2000

# GitHub configuration
github:
  # GitHub personal access token
  token: "ghp_your-token-here"
  # Repository owner
  owner: "your-org"
  # Repository name
  repo: "internal-repo"
  # How long to wait before auto-merging PRs (24h = 1 workday)
  auto_merge_delay: 24h
  # PR template file path (optional)
  pr_template: ".github/pull_request_template.md"
  # Team to request reviews from
  reviewers_team: "core-team"

# Slack notification configuration
slack:
  # Slack webhook URL
  webhook_url: "https://hooks.slack.com/services/your/webhook/url"
  # Channel to send notifications to
  channel: "#ai-rebaser"
  # Username for the bot
  username: "AI Rebaser"

# Test configuration
tests:
  # Maximum time to wait for all tests to complete
  timeout: 30m
  # List of test commands to run
  commands:
    - name: "build"
      command: "go"
      args: ["build", "./..."]
      working_dir: ""
      environment:
        CGO_ENABLED: "0"
        GOOS: "linux"
    
    - name: "test"
      command: "go"
      args: ["test", "./..."]
      working_dir: ""
      environment:
        CGO_ENABLED: "0"
    
    - name: "lint"
      command: "golangci-lint"
      args: ["run"]
      working_dir: ""
      environment: {}
    
    - name: "custom-firmware-test"
      command: "./scripts/firmware-test.sh"
      args: []
      working_dir: ""
      environment:
        FIRMWARE_ENV: "testing"